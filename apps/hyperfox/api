
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>HyperFox Browser</title>
  <style>
    body {
      margin: 0;
      font-family: 'Courier New', Courier, monospace;
      background: linear-gradient(135deg, #0f1d2e, #112);
      color: #eee;
      overflow: hidden;
    }
    /* Header container now extends into two rows */
    #header {
      display: flex;
      flex-direction: column;
      background: rgba(0, 31, 63, 0.8);
      padding: 10px;
      box-shadow: 0 0 15px rgba(255, 133, 27, 0.5);
    }
    /* Top row for logo and controls */
    #header-top {
      display: flex;
      align-items: center;
    }
    /* Larger logo image with neon glow */
    #logo {
      height: 60px;
      max-width: 200px;
      margin-right: 20px;
      filter: drop-shadow(0 0 15px rgba(255, 165, 0, 0.9));
    }
    /* Controls container */
    #controls {
      display: flex;
      align-items: center;
      flex-grow: 1;
    }
    /* Navigation buttons styling */
    button {
      background: rgba(255, 133, 27, 0.7);
      border: 1px solid rgba(255, 133, 27, 0.9);
      padding: 5px 10px;
      margin-right: 5px;
      color: #fff;
      cursor: pointer;
      font-size: 1em;
      border-radius: 3px;
      box-shadow: 0 0 8px rgba(255, 133, 27, 0.7);
      transition: box-shadow 0.3s ease, background 0.3s ease;
    }
    button:hover {
      background: rgba(255, 133, 27, 0.9);
      box-shadow: 0 0 12px rgba(255, 133, 27, 1);
    }
    /* URL input styling */
    input[type="text"] {
      flex-grow: 1;
      padding: 5px;
      font-size: 1em;
      border: 1px solid rgba(255, 133, 27, 0.9);
      border-radius: 3px;
      margin-right: 5px;
      background: rgba(0, 31, 63, 0.6);
      color: #fff;
      box-shadow: 0 0 8px rgba(255, 133, 27, 0.5);
      outline: none;
      transition: box-shadow 0.3s ease;
    }
    input[type="text"]:focus {
      box-shadow: 0 0 12px rgba(255, 133, 27, 0.8);
    }
    /* Bottom row for proxy status message */
    #header-bottom {
      margin-top: 5px;
      text-align: center;
      font-size: 0.9em;
    }
    /* Iframe container styling */
    #iframeContainer {
      width: 100%;
      height: calc(100vh - 100px);
      border: none;
      background: rgba(0, 0, 0, 0.5);
    }
  </style>
</head>
<body>
  <div id="header">
    <div id="header-top">
      <img id="logo" src="assets/images/logo.png" alt="HyperFox Logo" />
      <div id="controls">
        <button id="back">‚óÄ</button>
        <button id="forward">‚ñ∂</button>
        <button id="refresh">‚ü≥</button>
        <button id="home">üè†</button>
        <button id="toggleProxy">Proxy: ON</button>
        <input type="text" id="urlInput" placeholder="Enter URL" />
        <button id="go">Go</button>
      </div>
    </div>
    <div id="header-bottom">
      <span id="proxyMessage">‚ö†Ô∏èSome sites will not load properly‚ö†Ô∏è</span>
    </div>
  </div>
  
  <iframe id="iframeContainer" src="assets/home/index.html"></iframe>
  
  <script>
    // Utility to read query params
    function getQueryParam(name) {
      return new URLSearchParams(window.location.search).get(name);
    }

    // Kiosk parameters
    const isKiosk = getQueryParam("kiosk") === "true";
    const kioskUrl = getQueryParam("url");

    // DOM refs
    const iframe = document.getElementById('iframeContainer');
    const urlInput = document.getElementById('urlInput');
    const backButton = document.getElementById('back');
    const forwardButton = document.getElementById('forward');
    const refreshButton = document.getElementById('refresh');
    const homeButton = document.getElementById('home');
    const goButton = document.getElementById('go');
    const toggleProxyButton = document.getElementById('toggleProxy');
    const proxyMessage = document.getElementById('proxyMessage');
    const header = document.getElementById('header');

    // History stacks
    let historyStack = [];
    let forwardStack = [];
    let proxyOn = false;

    // On kiosk: hide UI and expand iframe
    if (isKiosk && kioskUrl) {
      header.style.display = 'none';
      iframe.style.height = '100vh';
      navigate(kioskUrl);
    }

    // Listen for postMessages from iframe (proxy navigation)
    window.addEventListener('message', function(event) {
      if (event.data && event.data.type === 'navigate' && event.data.url) {
        navigate(event.data.url);
      }
    });

    // Navigation function
    function navigate(url, pushHistory = true) {
      if (!url.startsWith('http://') && !url.startsWith('https://') && !url.startsWith('assets/')) {
        url = 'https://' + url;
      }
      if (proxyOn) {
        fetch('https://api.codetabs.com/v1/proxy?quest=' + encodeURIComponent(url))
          .then(r => r.text())
          .then(htmlText => {
            let base = new URL(url).origin;
            htmlText = htmlText.replace(/(src|href)=["']\/(?!\/)/g,
              (m,p1) => `${p1}="https://api.codetabs.com/v1/proxy?quest=${encodeURIComponent(base)}/`);
            const inject = `<script>
document.addEventListener('click',function(e){
  let t=e.target;
  while(t&&t!==document){
    if(t.tagName==='A'&&t.href){
      e.preventDefault();
      parent.postMessage({type:'navigate',url:t.href},'*');
      break;
    }
    t=t.parentElement;
  }
});
<\/script>`;
            htmlText = htmlText.includes('</head>')
              ? htmlText.replace('</head>', inject + '</head>')
              : htmlText.includes('</body>')
                ? htmlText.replace('</body>', inject + '</body>')
                : inject + htmlText;
            const blob = new Blob([htmlText],{type:'text/html'});
            iframe.src = URL.createObjectURL(blob);
            urlInput.value = url;
            if (pushHistory) { historyStack.push(url); forwardStack = []; }
          }).catch(()=> alert('Failed to load via proxy'));
      } else {
        iframe.src = url;
        urlInput.value = url;
        if (pushHistory) { historyStack.push(url); forwardStack = []; }
      }
    }

    // Button handlers
    goButton.addEventListener('click', () => navigate(urlInput.value));
    urlInput.addEventListener('keypress', e => {
      if (e.key === 'Enter') navigate(urlInput.value);
    });
    backButton.addEventListener('click', () => {
      if (historyStack.length) {
        forwardStack.push(urlInput.value);
        navigate(historyStack.pop(), false);
      }
    });
    forwardButton.addEventListener('click', () => {
      if (forwardStack.length) {
        historyStack.push(urlInput.value);
        navigate(forwardStack.pop(), false);
      }
    });
    refreshButton.addEventListener('click', () => navigate(urlInput.value, false));
    homeButton.addEventListener('click', () => navigate('assets/home/index.html'));
    toggleProxyButton.addEventListener('click', () => {
      proxyOn = !proxyOn;
      toggleProxyButton.textContent = proxyOn ? 'Proxy: ON' : 'Proxy: OFF';
      proxyMessage.textContent = proxyOn
        ? '‚ö†Ô∏èSome sites will not load properly. Or they will not load at all‚ö†Ô∏è'
        : 'Only sites that allow iframing will show.';
      navigate(urlInput.value, false);
    });
  </script>
</body>
</html>
